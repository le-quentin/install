- name: "Home config - OS specific packages"
  import_playbook: "./os-specific.yaml"
  vars:
    tasks:
      - chezmoi
- name: Configure ~ env
  hosts: work_machine
  become: no
  tasks:
  - name: "Home config - setup chezmoi"
    shell: chezmoi init --apply --force --ssh le-quentin
    args:
      creates: "{{ansible_env.HOME}}/.local/share/chezmoi"
  - name: "Home config - zsh by default"
    become: yes
    shell: chsh -s /usr/bin/zsh {{ ansible_user_id }}
    register: chsh_result
    changed_when: "'Shell changed' in chsh_result.stdout"
    # TODO notify to ask for relogin on change
  - name: "Home config - fzf - clone"
    git: 
      repo: https://github.com/junegunn/fzf.git
      depth: 1
      dest: "{{ansible_env.HOME}}/.fzf"
      update: no
  - name: "Home config - oh-my-zsh"
    shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" "--unattended"
    args:
      creates: "{{ ansible_env.HOME }}/.oh-my-zsh"
  - name: "Home config - oh-my-zsh - restore zshrc"
    shell: "mv {{ansible_env.HOME}}/.zshrc.pre-oh-my-zsh {{ansible_env.HOME}}/.zshrc"
    args:
      removes: "{{ansible_env.HOME}}/.zshrc.pre-oh-my-zsh"
  - name: "Home config - powerlevel10k"
    git:
      repo: https://github.com/romkatv/powerlevel10k.git
      version: 5bba4b8
      depth: 1
      dest: "{{ansible_env.HOME}}/.oh-my-zsh/custom/themes/powerlevel10k"
      update: no
  - name: "Home config - tmux-powerline"
    git:
      repo: https://github.com/erikw/tmux-powerline.git
      depth: 1
      version: 42f06c1
      dest: "{{ansible_env.HOME}}/.tmux-powerline"
      update: no
  - name: Ensure tmux plugins folder exists
    ansible.builtin.file:
      path: "{{ ansible_env.HOME }}/.tmux/plugins"
      state: directory
      mode: '0755'
      recurse: yes
  - name: Ensure tmux manually managed plugins folder exists
    ansible.builtin.file:
      path: "{{ ansible_env.HOME }}/.config/tmux/plugins"
      state: directory
      mode: '0755'
      recurse: yes
  - name: "Home config - tpm (tmux plugins manager)"
    git:
      repo: https://github.com/tmux-plugins/tpm
      depth: 1
      version: 99469c4
      dest: "{{ansible_env.HOME}}/.tmux/plugins/tpm"
      update: no
  - name: "Home config - catppuccin-tmux (zenful theme)"
    git:
      repo: https://github.com/catppuccin/tmux.git
      depth: 1
      version: d645852
      dest: "{{ansible_env.HOME}}/.config/tmux/plugins/catppuccin"
      update: no
  - name: "Home config - tmux-reset (to get truly self-contained config)"
    shell: sh -c "$(curl -Lo ~/.config/tmux/plugins/tmux-reset/reset --create-dirs https://raw.githubusercontent.com/hallazzang/tmux-reset/3.0/tmux-reset)" "" "--unattended"
    args:
      creates: "{{ ansible_env.HOME }}/.config/tmux/plugins/tmux-reset/reset"
  - name: "Install tmux plugins"
    command: ~/.tmux/plugins/tpm/bin/install_plugins
  - name: "Home config - pull omnitheme"
    git:
      repo: git@github.com:le-quentin/omnitheme
      dest: "{{ansible_env.HOME}}/perso/omnitheme"
      update: no
  - name: Manually create the initial virtualenv
    command:
      cmd: python -m venv "{{ansible_env.HOME}}/perso/omnitheme/venv"
      creates: "{{ansible_env.HOME}}/perso/omnitheme/venv"
  - name: "Home config - install omnitheme requirements"
    pip:
      requirements: "{{ansible_env.HOME}}/perso/omnitheme/requirements.txt"
      virtualenv: "{{ansible_env.HOME}}/perso/omnitheme/venv"
  - name: "Home config - setup theme with omnitheme"
    shell: "{{ansible_env.HOME}}/perso/omnitheme/venv/bin/python {{ansible_env.HOME}}/perso/omnitheme/omnitheme.py oceanic_custom"
  - name: "Home config - install fonts"
    become: yes
    copy:
      src: ./fonts/ 
      dest: /usr/local/share/fonts/
  - name: "Home config - reload fonts cache"
    shell: fc-cache -f -v
- name: "Home config - OS specific config"
  import_playbook: "./os-specific.yaml"
  vars:
    tasks:
      - fzf
